{
    "name": "Durable AF - Pipeline Failed Process",
    "properties": {
        "activities": [
            {
                "name": "Log Function Failure",
                "description": "Report to the current execution table that the framework pipeline activity has failed. This failure is outside of the scope of the framework and is probably related to a wider platform problem.",
                "type": "SqlServerStoredProcedure",
                "dependsOn": [],
                "policy": {
                    "timeout": "0.00:10:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "storedProcedureName": "[procfwk].[SetLogActivityFailed]",
                    "storedProcedureParameters": {
                        "CallingActivity": {
                            "value": "Check Execute Worker Pipeline Status",
                            "type": "String"
                        },
                        "ExecutionId": {
                            "value": {
                                "value": "@pipeline().parameters.executionId",
                                "type": "Expression"
                            },
                            "type": "Guid"
                        },
                        "PipelineId": {
                            "value": {
                                "value": "@pipeline().parameters.pipelineId",
                                "type": "Expression"
                            },
                            "type": "Int32"
                        },
                        "StageId": {
                            "value": {
                                "value": "@pipeline().parameters.stageId",
                                "type": "Expression"
                            },
                            "type": "Int32"
                        }
                    }
                },
                "linkedServiceName": {
                    "referenceName": "SupportDatabase",
                    "type": "LinkedServiceReference"
                }
            },
            {
                "name": "Pipeline Status Failed",
                "description": "Updates the current execution table with a pipeline status of failed if the function outcome is failed. Also blocks pipelines in the downstream execution stage.",
                "type": "SqlServerStoredProcedure",
                "dependsOn": [
                    {
                        "activity": "Log Function Failure",
                        "dependencyConditions": [
                            "Completed"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "0.00:10:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "storedProcedureName": "[procfwk].[SetLogPipelineFailed]",
                    "storedProcedureParameters": {
                        "ExecutionId": {
                            "value": {
                                "value": "@pipeline().parameters.executionId",
                                "type": "Expression"
                            },
                            "type": "Guid"
                        },
                        "PipelineId": {
                            "value": {
                                "value": "@pipeline().parameters.pipelineId",
                                "type": "Expression"
                            },
                            "type": "Int32"
                        },
                        "RunId": {
                            "value": null,
                            "type": "Guid"
                        },
                        "StageId": {
                            "value": {
                                "value": "@pipeline().parameters.stageId",
                                "type": "Expression"
                            },
                            "type": "Int32"
                        }
                    }
                },
                "linkedServiceName": {
                    "referenceName": "SupportDatabase",
                    "type": "LinkedServiceReference"
                }
            },
            {
                "name": "Check For Alerts",
                "description": "Checks the properties tables and if any recipients in the database require alerts sending for the current pipeline ID.",
                "type": "Lookup",
                "dependsOn": [
                    {
                        "activity": "Pipeline Status Failed",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "0.00:10:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "source": {
                        "type": "AzureSqlSource",
                        "sqlReaderStoredProcedureName": "[procfwk].[CheckForEmailAlerts]",
                        "storedProcedureParameters": {
                            "PipelineId": {
                                "type": "Int32",
                                "value": {
                                    "value": "@pipeline().parameters.pipelineId",
                                    "type": "Expression"
                                }
                            }
                        },
                        "queryTimeout": "02:00:00",
                        "partitionOption": "None"
                    },
                    "dataset": {
                        "referenceName": "GetSetMetadata",
                        "type": "DatasetReference"
                    },
                    "firstRowOnly": true
                }
            },
            {
                "name": "Send Alerts_copy1",
                "description": "True = alerts need sending.\nFalse = do nothing.",
                "type": "IfCondition",
                "dependsOn": [
                    {
                        "activity": "Check For Alerts",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "expression": {
                        "value": "@activity('Check For Alerts').output.firstRow.SendAlerts",
                        "type": "Expression"
                    },
                    "ifTrueActivities": [
                        {
                            "name": "Get Email Parts",
                            "description": "Return all required content from the metadata database to send an email alerting using the procfwk. The lookup returns the exact content for the function body request.",
                            "type": "Lookup",
                            "dependsOn": [],
                            "policy": {
                                "timeout": "0.00:10:00",
                                "retry": 0,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": true,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "source": {
                                    "type": "AzureSqlSource",
                                    "sqlReaderStoredProcedureName": "[procfwk].[GetEmailAlertParts]",
                                    "storedProcedureParameters": {
                                        "PipelineId": {
                                            "type": "Int32",
                                            "value": {
                                                "value": "@pipeline().parameters.pipelineId",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "queryTimeout": "02:00:00",
                                    "partitionOption": "None"
                                },
                                "dataset": {
                                    "referenceName": "GetSetMetadata",
                                    "type": "DatasetReference"
                                },
                                "firstRowOnly": true
                            }
                        },
                        {
                            "name": "Call Email Sender_copy1",
                            "description": "Pass off email request to Utils Send Email pipeline.",
                            "type": "ExecutePipeline",
                            "dependsOn": [
                                {
                                    "activity": "Get Email Parts",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                                "pipeline": {
                                    "referenceName": "Email Sender",
                                    "type": "PipelineReference"
                                },
                                "waitOnCompletion": true,
                                "parameters": {
                                    "Recipients": {
                                        "value": "@activity('Get Email Parts').output.firstRow.emailRecipients",
                                        "type": "Expression"
                                    },
                                    "CcRecipients": {
                                        "value": "@activity('Get Email Parts').output.firstRow.emailCcRecipients",
                                        "type": "Expression"
                                    },
                                    "BccRecipients": {
                                        "value": "@activity('Get Email Parts').output.firstRow.emailBccRecipients",
                                        "type": "Expression"
                                    },
                                    "Subject": {
                                        "value": "@activity('Get Email Parts').output.firstRow.emailSubject",
                                        "type": "Expression"
                                    },
                                    "Body": {
                                        "value": "@activity('Get Email Parts').output.firstRow.emailBody",
                                        "type": "Expression"
                                    },
                                    "Importance": {
                                        "value": "@activity('Get Email Parts').output.firstRow.emailImportance",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "executionId": {
                "type": "string"
            },
            "stageId": {
                "type": "int"
            },
            "pipelineId": {
                "type": "int"
            }
        },
        "folder": {
            "name": "_ProcFwk/_ProcFwkUtils"
        },
        "annotations": [],
        "lastPublishTime": "2021-08-25T09:37:58Z"
    },
    "type": "Microsoft.DataFactory/factories/pipelines"
}